// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package gttelemetry

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"bytes"
)

type GranTurismoTelemetry struct {
	Header *GranTurismoTelemetry_Header
	MapPositionCoordinates *GranTurismoTelemetry_Coordinate
	VelocityVector *GranTurismoTelemetry_Vector
	RotationAxes *GranTurismoTelemetry_SymmetryAxes
	Heading float32
	AngularVelocityVector *GranTurismoTelemetry_Vector
	RideHeight float32
	EngineRpm float32
	Oiv float32
	FuelLevel float32
	FuelCapacity float32
	GroundSpeed float32
	ManifoldPressure float32
	OilPressure float32
	WaterTemperature float32
	OilTemperature float32
	TyreTemperature *GranTurismoTelemetry_CornerSet
	SequenceId uint32
	CurrentLap uint16
	RaceLaps uint16
	BestLaptime int32
	LastLaptime int32
	TimeOfDay uint32
	StartingPosition int16
	RaceEntrants int16
	RevLightRpmMin uint16
	RevLightRpmMax uint16
	CalculatedMaxSpeed uint16
	Flags *GranTurismoTelemetry_Flags
	TransmissionGear *GranTurismoTelemetry_TransmissionGear
	Throttle uint8
	Brake uint8
	Ignore1 []byte
	RoadPlaneVector *GranTurismoTelemetry_Vector
	RoadPlaneDistance uint32
	WheelRadiansPerSecond *GranTurismoTelemetry_CornerSet
	TyreRadius *GranTurismoTelemetry_CornerSet
	SuspensionHeight *GranTurismoTelemetry_CornerSet
	Reserved []byte
	ClutchActuation float32
	ClutchEngagement float32
	CluchOutputRpm float32
	TransmissionTopSpeedRatio float32
	TransmissionGearRatio *GranTurismoTelemetry_GearRatio
	VehicleId uint32
	_io *kaitai.Stream
	_root *GranTurismoTelemetry
	_parent interface{}
}
func NewGranTurismoTelemetry() *GranTurismoTelemetry {
	return &GranTurismoTelemetry{
	}
}

func (this *GranTurismoTelemetry) Read(io *kaitai.Stream, parent interface{}, root *GranTurismoTelemetry) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1 := NewGranTurismoTelemetry_Header()
	err = tmp1.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Header = tmp1
	tmp2 := NewGranTurismoTelemetry_Coordinate()
	err = tmp2.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.MapPositionCoordinates = tmp2
	tmp3 := NewGranTurismoTelemetry_Vector()
	err = tmp3.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.VelocityVector = tmp3
	tmp4 := NewGranTurismoTelemetry_SymmetryAxes()
	err = tmp4.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.RotationAxes = tmp4
	tmp5, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Heading = float32(tmp5)
	tmp6 := NewGranTurismoTelemetry_Vector()
	err = tmp6.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.AngularVelocityVector = tmp6
	tmp7, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.RideHeight = float32(tmp7)
	tmp8, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.EngineRpm = float32(tmp8)
	tmp9, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Oiv = float32(tmp9)
	tmp10, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.FuelLevel = float32(tmp10)
	tmp11, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.FuelCapacity = float32(tmp11)
	tmp12, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.GroundSpeed = float32(tmp12)
	tmp13, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.ManifoldPressure = float32(tmp13)
	tmp14, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.OilPressure = float32(tmp14)
	tmp15, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.WaterTemperature = float32(tmp15)
	tmp16, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.OilTemperature = float32(tmp16)
	tmp17 := NewGranTurismoTelemetry_CornerSet()
	err = tmp17.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.TyreTemperature = tmp17
	tmp18, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.SequenceId = uint32(tmp18)
	tmp19, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.CurrentLap = uint16(tmp19)
	tmp20, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.RaceLaps = uint16(tmp20)
	tmp21, err := this._io.ReadS4le()
	if err != nil {
		return err
	}
	this.BestLaptime = int32(tmp21)
	tmp22, err := this._io.ReadS4le()
	if err != nil {
		return err
	}
	this.LastLaptime = int32(tmp22)
	tmp23, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.TimeOfDay = uint32(tmp23)
	tmp24, err := this._io.ReadS2le()
	if err != nil {
		return err
	}
	this.StartingPosition = int16(tmp24)
	tmp25, err := this._io.ReadS2le()
	if err != nil {
		return err
	}
	this.RaceEntrants = int16(tmp25)
	tmp26, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.RevLightRpmMin = uint16(tmp26)
	tmp27, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.RevLightRpmMax = uint16(tmp27)
	tmp28, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.CalculatedMaxSpeed = uint16(tmp28)
	tmp29 := NewGranTurismoTelemetry_Flags()
	err = tmp29.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Flags = tmp29
	tmp30 := NewGranTurismoTelemetry_TransmissionGear()
	err = tmp30.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.TransmissionGear = tmp30
	tmp31, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Throttle = tmp31
	tmp32, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Brake = tmp32
	tmp33, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp33 = tmp33
	this.Ignore1 = tmp33
	tmp34 := NewGranTurismoTelemetry_Vector()
	err = tmp34.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.RoadPlaneVector = tmp34
	tmp35, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.RoadPlaneDistance = uint32(tmp35)
	tmp36 := NewGranTurismoTelemetry_CornerSet()
	err = tmp36.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.WheelRadiansPerSecond = tmp36
	tmp37 := NewGranTurismoTelemetry_CornerSet()
	err = tmp37.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.TyreRadius = tmp37
	tmp38 := NewGranTurismoTelemetry_CornerSet()
	err = tmp38.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.SuspensionHeight = tmp38
	tmp39, err := this._io.ReadBytes(int(32))
	if err != nil {
		return err
	}
	tmp39 = tmp39
	this.Reserved = tmp39
	tmp40, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.ClutchActuation = float32(tmp40)
	tmp41, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.ClutchEngagement = float32(tmp41)
	tmp42, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.CluchOutputRpm = float32(tmp42)
	tmp43, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.TransmissionTopSpeedRatio = float32(tmp43)
	tmp44 := NewGranTurismoTelemetry_GearRatio()
	err = tmp44.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.TransmissionGearRatio = tmp44
	tmp45, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.VehicleId = uint32(tmp45)
	return err
}

/**
 * Various flags for the current state of play and instrument cluster lights
 */
type GranTurismoTelemetry_Flags struct {
	Live bool
	GamePaused bool
	Loading bool
	InGear bool
	HasTurbo bool
	RevLimiterAlert bool
	HandBrakeActive bool
	HeadlightsActive bool
	HighBeamActive bool
	LowBeamActive bool
	AsmActive bool
	TcsActive bool
	Flag13 bool
	Flag14 bool
	Flag15 bool
	Flag16 bool
	_io *kaitai.Stream
	_root *GranTurismoTelemetry
	_parent *GranTurismoTelemetry
}
func NewGranTurismoTelemetry_Flags() *GranTurismoTelemetry_Flags {
	return &GranTurismoTelemetry_Flags{
	}
}

func (this *GranTurismoTelemetry_Flags) Read(io *kaitai.Stream, parent *GranTurismoTelemetry, root *GranTurismoTelemetry) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp46, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Live = tmp46 != 0
	tmp47, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.GamePaused = tmp47 != 0
	tmp48, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Loading = tmp48 != 0
	tmp49, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.InGear = tmp49 != 0
	tmp50, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.HasTurbo = tmp50 != 0
	tmp51, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.RevLimiterAlert = tmp51 != 0
	tmp52, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.HandBrakeActive = tmp52 != 0
	tmp53, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.HeadlightsActive = tmp53 != 0
	tmp54, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.HighBeamActive = tmp54 != 0
	tmp55, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.LowBeamActive = tmp55 != 0
	tmp56, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.AsmActive = tmp56 != 0
	tmp57, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.TcsActive = tmp57 != 0
	tmp58, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Flag13 = tmp58 != 0
	tmp59, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Flag14 = tmp59 != 0
	tmp60, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Flag15 = tmp60 != 0
	tmp61, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Flag16 = tmp61 != 0
	return err
}

/**
 * Vector
 */
type GranTurismoTelemetry_Vector struct {
	VectorX float32
	VectorY float32
	VectorZ float32
	_io *kaitai.Stream
	_root *GranTurismoTelemetry
	_parent *GranTurismoTelemetry
}
func NewGranTurismoTelemetry_Vector() *GranTurismoTelemetry_Vector {
	return &GranTurismoTelemetry_Vector{
	}
}

func (this *GranTurismoTelemetry_Vector) Read(io *kaitai.Stream, parent *GranTurismoTelemetry, root *GranTurismoTelemetry) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp62, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.VectorX = float32(tmp62)
	tmp63, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.VectorY = float32(tmp63)
	tmp64, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.VectorZ = float32(tmp64)
	return err
}

/**
 * Data set representing each wheel or suspension component at each corner of the vehicle
 */
type GranTurismoTelemetry_CornerSet struct {
	FrontLeft float32
	FrontRight float32
	RearLeft float32
	RearRight float32
	_io *kaitai.Stream
	_root *GranTurismoTelemetry
	_parent *GranTurismoTelemetry
}
func NewGranTurismoTelemetry_CornerSet() *GranTurismoTelemetry_CornerSet {
	return &GranTurismoTelemetry_CornerSet{
	}
}

func (this *GranTurismoTelemetry_CornerSet) Read(io *kaitai.Stream, parent *GranTurismoTelemetry, root *GranTurismoTelemetry) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp65, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.FrontLeft = float32(tmp65)
	tmp66, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.FrontRight = float32(tmp66)
	tmp67, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.RearLeft = float32(tmp67)
	tmp68, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.RearRight = float32(tmp68)
	return err
}

/**
 * Vector
 */
type GranTurismoTelemetry_Coordinate struct {
	CoordinateX float32
	CoordinateY float32
	CoordinateZ float32
	_io *kaitai.Stream
	_root *GranTurismoTelemetry
	_parent *GranTurismoTelemetry
}
func NewGranTurismoTelemetry_Coordinate() *GranTurismoTelemetry_Coordinate {
	return &GranTurismoTelemetry_Coordinate{
	}
}

func (this *GranTurismoTelemetry_Coordinate) Read(io *kaitai.Stream, parent *GranTurismoTelemetry, root *GranTurismoTelemetry) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp69, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.CoordinateX = float32(tmp69)
	tmp70, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.CoordinateY = float32(tmp70)
	tmp71, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.CoordinateZ = float32(tmp71)
	return err
}

/**
 * Transmission gear selection information
 */
type GranTurismoTelemetry_TransmissionGear struct {
	Current uint64
	Suggested uint64
	_io *kaitai.Stream
	_root *GranTurismoTelemetry
	_parent *GranTurismoTelemetry
}
func NewGranTurismoTelemetry_TransmissionGear() *GranTurismoTelemetry_TransmissionGear {
	return &GranTurismoTelemetry_TransmissionGear{
	}
}

func (this *GranTurismoTelemetry_TransmissionGear) Read(io *kaitai.Stream, parent *GranTurismoTelemetry, root *GranTurismoTelemetry) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp72, err := this._io.ReadBitsIntLe(4)
	if err != nil {
		return err
	}
	this.Current = tmp72
	tmp73, err := this._io.ReadBitsIntLe(4)
	if err != nil {
		return err
	}
	this.Suggested = tmp73
	return err
}

/**
 * Magic file header
 */
type GranTurismoTelemetry_Header struct {
	Magic []byte
	_io *kaitai.Stream
	_root *GranTurismoTelemetry
	_parent *GranTurismoTelemetry
}
func NewGranTurismoTelemetry_Header() *GranTurismoTelemetry_Header {
	return &GranTurismoTelemetry_Header{
	}
}

func (this *GranTurismoTelemetry_Header) Read(io *kaitai.Stream, parent *GranTurismoTelemetry, root *GranTurismoTelemetry) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp74, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp74 = tmp74
	this.Magic = tmp74
	if !(bytes.Equal(this.Magic, []uint8{48, 83, 55, 71})) {
		return kaitai.NewValidationNotEqualError([]uint8{48, 83, 55, 71}, this.Magic, this._io, "/types/header/seq/0")
	}
	return err
}

/**
 * Gear ratios for each gear in the transmission
 */
type GranTurismoTelemetry_GearRatio struct {
	Gear []float32
	_io *kaitai.Stream
	_root *GranTurismoTelemetry
	_parent *GranTurismoTelemetry
}
func NewGranTurismoTelemetry_GearRatio() *GranTurismoTelemetry_GearRatio {
	return &GranTurismoTelemetry_GearRatio{
	}
}

func (this *GranTurismoTelemetry_GearRatio) Read(io *kaitai.Stream, parent *GranTurismoTelemetry, root *GranTurismoTelemetry) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 0; i < int(8); i++ {
		_ = i
		tmp75, err := this._io.ReadF4le()
		if err != nil {
			return err
		}
		this.Gear = append(this.Gear, tmp75)
	}
	return err
}

/**
 * Symmetry axes
 */
type GranTurismoTelemetry_SymmetryAxes struct {
	Pitch float32
	Yaw float32
	Roll float32
	_io *kaitai.Stream
	_root *GranTurismoTelemetry
	_parent *GranTurismoTelemetry
}
func NewGranTurismoTelemetry_SymmetryAxes() *GranTurismoTelemetry_SymmetryAxes {
	return &GranTurismoTelemetry_SymmetryAxes{
	}
}

func (this *GranTurismoTelemetry_SymmetryAxes) Read(io *kaitai.Stream, parent *GranTurismoTelemetry, root *GranTurismoTelemetry) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp76, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Pitch = float32(tmp76)
	tmp77, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Yaw = float32(tmp77)
	tmp78, err := this._io.ReadF4le()
	if err != nil {
		return err
	}
	this.Roll = float32(tmp78)
	return err
}
